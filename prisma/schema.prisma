// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  fullName String
  email String @unique
  password String
  role Role @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdConcepts Concept[] @relation("CreatedConcepts")
  purchasedConcepts Concept[] @relation("PurchasedConcepts")
}
model Image{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  fileName String
  url String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Concept {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  thumbnail String
  images String[]
  description String
  style  Style
  price  Int?
  roomType Room
  createdByUserId String @db.ObjectId
  createdBy User @relation("CreatedConcepts", fields: [createdByUserId], references: [id])
  purchasedByUserId String? @db.ObjectId
  purchasedBy User? @relation("PurchasedConcepts", fields: [purchasedByUserId], references: [id])
  status Status @default(DRAFT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  conceptProducts ConceptProduct[]
}

model ConceptProduct{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  conceptId String @db.ObjectId
  productId String @db.ObjectId
  concept Concept @relation(fields: [conceptId], references: [id])
  product Product @relation(fields: [productId], references: [id])
  @@unique([conceptId, productId])
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  image String
  description String
  category String
  price Int?
  url String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  conceptProducts ConceptProduct[]
  partnerProducts PartnerProduct[]
}

model PartnerProduct{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  partnerId String @db.ObjectId
  productId String @db.ObjectId
  partner Partner @relation(fields: [partnerId],references: [id])
  product Product @relation(fields: [productId],references: [id])
  @@unique([partnerId, productId])
}

model Partner {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  partnerProducts PartnerProduct[]
}


enum Role {
  ADMIN
  USER
  PARTNER
}

enum Style {
  MINIMALIST
  MODERN
  INDUSTRIAL
  SCANDINAVIAN
  CONTEMPORARY
  MIDCENTURY
  ARTDECO
  TRADITIONAL
  BOHEMIAN
  ELECTIC
}
enum Status {
  DRAFT
  PUBLISHED
}

enum Room {
 KITCHEN
  LIVINGROOM
  BEDROOM
  DININGROOM
  BATHROOM
  OFFICE
  STUDY
  ENTRYWAY
  LIBRARY
  NURSERY
}

